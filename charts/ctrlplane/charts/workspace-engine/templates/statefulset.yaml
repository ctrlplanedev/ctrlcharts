{{- $imageCfg := dict "global" $.Values.global.image "local" $.Values.image -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-engine
  labels:
    {{- include "workspace-engine.labels" . | nindent 4 }}
    {{- if .Values.statefulset.labels -}}
    {{-   toYaml .Values.statefulset.labels | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.statefulset.annotations -}}
    {{-   toYaml .Values.statefulset.annotations | nindent 4 }}
    {{- end }}
spec:
  serviceName: {{ .Release.Name }}-engine
  replicas: {{ .Values.replica }}
  selector:
    matchLabels:
      {{- include "ctrlplane.selectorLabels" $ | nindent 6 }}
      {{- include "workspace-engine.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "workspace-engine.labels" . | nindent 8 }}
      annotations:
        {{- if .Values.pod.annotations -}}
        {{-   toYaml .Values.pod.annotations | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "workspace-engine.serviceAccountName" . }}
      {{- if .tolerations }}
      tolerations:
        {{- toYaml .tolerations | nindent 8 }}
      {{- end }}
      {{- include "ctrlplane.nodeSelector" . | nindent 6 }}
      {{- include "ctrlplane.priorityClassName" . | nindent 6 }}
      {{- include "ctrlplane.podSecurityContext" .Values.pod.securityContext | nindent 6 }}
      containers:
        - name: workspace-engine
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - name: http2
              containerPort: 8081
              protocol: TCP
          env:
            - name: KAFKA_BROKERS
              value: {{ .Values.global.kafkaBrokers | quote }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_PARTITION_ID
              value: "$(echo $POD_NAME | sed 's/.*-//')"
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-connections
                  key: REDIS_URL
            - name: POSTGRES_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-connections
                  key: POSTGRES_URL
            - name: VARIABLES_AES_256_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-encryption-key
                  key: AES_256_KEY
            {{- with (include "ctrlplane.githubBot" . | fromYaml) }}
            - name: GITHUB_BOT_APP_ID
              value: {{ .appId | quote }}
            - name: GITHUB_BOT_CLIENT_ID
              value: {{ .clientId | quote }}
            - name: GITHUB_BOT_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .secretRef }}
                  key: GITHUB_BOT_CLIENT_SECRET
                  optional: true
            - name: GITHUB_BOT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .secretRef }}
                  key: GITHUB_BOT_PRIVATE_KEY
                  optional: true
            - name: GITHUB_BOT_NAME
              value: {{ .name }}
            {{- end }}
            {{- include "ctrlplane.extraEnv" . | nindent 12 }}
            {{- include "ctrlplane.extraEnvFrom" (dict "root" $ "local" .) | nindent 12 }}
            - name: ENABLE_NEW_POLICY_ENGINE
              value: {{ .Values.global.enableNewPolicyEngine | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
